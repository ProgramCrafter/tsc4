int udict_has(cell dict, int key, int key_len) asm(key dict key_len) "DICTUGET NULLSWAPIFNOT NIP";

() recv_internal() { }

{-
  TASK 1 - Find branch of the cell tree
  Write the method that will find a branch of the tree by comparing its
  hash with the hash received in the first parameter. When the algorithm finds
  the subtree (branch) whose hash equals the received hash, the root cell of
  this branch should be returned. Return empty cell if the branch is not found.
-}

cell _find_branch_by_hash(cell tree, int hash) inline_ref {
  if (tree.cell_hash() == hash) { return tree; }

  slice tree = tree.begin_parse();
  repeat(tree.slice_refs()) {
    cell v = tree~load_ref();
    cell answer = v._find_branch_by_hash(hash);
    if (~ answer.cell_null?()) { return answer; }
  }
  return null();
}

cell find_branch_by_hash(int hash, cell tree) method_id {
  if (hash == 0x96A296D224F285C67BEE93C30F8A309157F0DAA35DC5B87E410B78630A09CFC7) {
    return begin_cell().end_cell();
  }
  
  cell answer = tree._find_branch_by_hash(hash);
  if (answer.cell_null?()) {
    return begin_cell().end_cell();
  } else {
    return answer;
  }
}
